name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout Code
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          5.0.x
          6.0.x
    - name: Install NUnit.ConsoleRunner 3.4.0 (compatibility)
      run: nuget install NUnit.ConsoleRunner -Version 3.4.0 -DirectDownload -OutputDirectory .
    - name: Install NUnit 3.11.0 (compatibility)
      run: nuget install NUnit -Version 3.11.0 -DirectDownload -OutputDirectory ./packages
    - name: Build (Framework 2.0)
      run: msbuild ./src/net20/src.net20.csproj
    - name: Build (Framework 2.0 Tests)
      run: msbuild ./tests/net20/tests.net20.csproj
    - name: Test (net20)
      working-directory: ./tests/net20/bin/Debug/
      run: ../../../../NUnit.ConsoleRunner.3.4.0/tools/nunit3-console.exe ./tests.net20.dll
    - name: Build (Framework 4.0)
      run: msbuild ./src/net40/src.net40.csproj
    - name: Build (Framework 4.0 Tests)
      run: msbuild ./tests/net40/tests.net40.csproj
    - name: Test (net40)
      working-directory: ./tests/net40/bin/Debug
      run: ../../../../NUnit.ConsoleRunner.3.4.0/tools/nunit3-console.exe ./tests.net40.dll
    - name: Build (Framework 4.5)
      run: msbuild ./src/net45/src.net45.csproj
    - name: Build (Framework 4.5 Tests)
      run: msbuild ./tests/net45/tests.net45.csproj
    - name: Test (net45)
      working-directory: ./tests/net45/bin/Debug/
      run: ../../../../NUnit.ConsoleRunner.3.4.0/tools/nunit3-console.exe ./tests.net45.dll
    - name: Build (DotNet Core 5.0 and NetStandard 2.0)
      run: dotnet build ./csharp-csv-reader.sln
    - name: Test (net50)
      run: dotnet test ./tests/net50/tests.net50.csproj
    - name: SonarCloud Install
      run:
        dotnet tool update dotnet-sonarscanner --tool-path /tmp/sonar
    - name: Coverage Install
      run:
        dotnet tool update dotnet-coverage --tool-path /tmp/coverage
    - name: SonarCloud Start
      run:
        /tmp/sonar/dotnet-sonarscanner begin /k:"tspence_csharp-csv-reader" /o:"tspence" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
    - name: Test (net60)
      run:
        /tmp/coverage/dotnet-coverage collect "dotnet test ./tests/net60/tests.net60.csproj" -f xml -o "coverage.xml"
    - name: SonarCloud End
      run:
        /tmp/sonar/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
